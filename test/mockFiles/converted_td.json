    {
        "td": {
            "@context": [
                "https://www.w3.org/2019/wot/td/v1",
                {
                    "@language": "en"
                }
            ],
            "id": "urn:dev:ops:swagger-petstore-3050",
            "title": "swagger-petstore",
            "securityDefinitions": {
                "nosec_sc": {
                    "scheme": "nosec"
                }
            },
            "security": [
                "nosec_sc"
            ],
            "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
            "properties": {
                "pet": {
                    "writeOnly": true,
                    "description": " summary:Update an existing pet",
                    "schema": {
                        "$ref": "#/definitions/Pet"
                    }
                },
                "pet--findByStatus": {
                    "readOnly": true,
                    "description": "Multiple status values can be provided with comma separated strings summary:Finds Pets by status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pet"
                    }
                },
                "pet--findByTags": {
                    "readOnly": true,
                    "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing. summary:Finds Pets by tags",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pet"
                    }
                },
                "store--inventory": {
                    "readOnly": true,
                    "description": "Returns a map of status codes to quantities summary:Returns pet inventories by status",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "user--login": {
                    "readOnly": true,
                    "description": " summary:Logs user into the system",
                    "type": "string"
                },
                "user--logout": {
                    "readOnly": true,
                    "description": " summary:Logs out current logged in user session"
                }
            },
            "actions": {
                "pet": {
                    "description": " summary:Add a new pet to the store",
                    "input": {
                        "description": "Pet object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                },
                "store--order": {
                    "description": " summary:Place an order for a pet",
                    "input": {
                        "description": "order placed for purchasing the pet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                },
                "user": {
                    "description": "This can only be done by the logged in user. summary:Create user",
                    "input": {
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "user--createWithArray": {
                    "description": " summary:Creates list of users with given input array",
                    "input": {
                        "description": "List of user object",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "user--createWithList": {
                    "description": " summary:Creates list of users with given input array",
                    "input": {
                        "description": "List of user object",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "definitions": {
                "Order": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "petId": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "quantity": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "shipDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "status": {
                            "type": "string",
                            "description": "Order Status",
                            "enum": [
                                "placed",
                                "approved",
                                "delivered"
                            ]
                        },
                        "complete": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "xml": {
                        "name": "Order"
                    }
                },
                "Category": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "xml": {
                        "name": "Category"
                    }
                },
                "User": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "username": {
                            "type": "string"
                        },
                        "firstName": {
                            "type": "string"
                        },
                        "lastName": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "userStatus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "User Status"
                        }
                    },
                    "xml": {
                        "name": "User"
                    }
                },
                "Tag": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "xml": {
                        "name": "Tag"
                    }
                },
                "Pet": {
                    "type": "object",
                    "required": [
                        "name",
                        "photoUrls"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "category": {
                            "$ref": "#/definitions/Category"
                        },
                        "name": {
                            "type": "string",
                            "example": "doggie"
                        },
                        "photoUrls": {
                            "type": "array",
                            "xml": {
                                "name": "photoUrl",
                                "wrapped": true
                            },
                            "items": {
                                "type": "string"
                            }
                        },
                        "tags": {
                            "type": "array",
                            "xml": {
                                "name": "tag",
                                "wrapped": true
                            },
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        },
                        "status": {
                            "type": "string",
                            "description": "pet status in the store",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ]
                        }
                    },
                    "xml": {
                        "name": "Pet"
                    }
                },
                "ApiResponse": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "serviceUrl": "https://petstore.swagger.io/v2"
    }